# [ System ]
system:
  seed: 1
  verbose: True

# [ Experiment ]
experiment:
  type: "discrimination"
  name: "exp_ActAdd1"
  data: ["celebrity", "english_word"] #["emotion", "test_sentiment"]
  split:
    training_data: ["celebrity", "english_word"]
    testing_data: ["celebrity"]

# [ Data ]
prepare:
  seed: 1
  text_data_folder: "data/text"
  prepared_data_folder: "data/prepared"
  output_file_name: "inference"
  prompt_file: "prompts.yaml"

# [ Inference ]
inference:
  seed: 1
  model_path: "models/Meta-Llama-3-8B-Instruct/"
  tokenizer_path: "models/Meta-Llama-3-8B-Instruct/tokenizer.model"
  temperature: 0.5
  top_p: 0.9
  max_seq_len: 512
  max_batch_size: 8
  generation_verbose: False

  inference_data_folder: "data/inference"
  prompt_token: True
  token_places: "all" #[-1]
  layers: [16] #"all"
  save_input_token: True


# [ Projection ]
projection:
  seed: 1
  projection_data_folder: "data/projected"
  projection_model_path: "models/projection/"
  projections:
    PCAProjectionModel:
      n_components: 2
    # SparsePCAProjectionModel:
    #   n_components: 2
    #   alpha: 0.7
    # LDAProjectionModel:
    #   n_components: 2

  steering_vector:
    ["proj+mean+inv"]
    #, "mean"]


# [ Detection ]
detection:
  seed: 1
  detection_data_folder: "data/detection"
  detection_model_path: "models/detection/"
  detection_models:
    SVCDetectionModel:
      max_iter: 100
      probability: True
    # SGDDetectionModel:
    #   max_iter: 5
    #   loss: "log_loss"
    # XGBDetectionModel:
    #   n_estimators: 100
    #   max_depth: 3
    #   learning_rate: 0.1
    #   subsample: 0.5
    #   colsample_bytree: 0.5
    #   gamma: 0
    #   reg_alpha: 0
    #   reg_lambda: 1
    #   objective: "binary:logistic"
    #   eval_metric: "logloss"
    #   verbosity: 0

# [ Manipulation ]
manipulation: 
  switch: False
  additive_vector_path: "LLMs/mri_llm/inference_data/proj.pkl" 
  PCA_projection_path: "LLMs/mri_llm/inference_data/unit_delta.pkl" 
  layer: 16



# [ Evaluation ]
evaluation:
  evaluation_folder: "eval/"
  seed: 1
  


# [ Visualization ]
palette: [
  "#ee6a00",
  "#eeff41",
  "#009667",
  "#cd92d7",
  "#b3a77d",
  "#a1e8d9"
]
